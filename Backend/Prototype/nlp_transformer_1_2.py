# -*- coding: utf-8 -*-
"""NLP_TRANSFORMER_1_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1orUg_x5_tL5AzHsHXDEmuj5V49a57evx
"""

# prompt: download this file and show its label distribution and then check for any duplicates,any empties in it.For duplicates check in POST ....CHECK IF EVERY POST_ID is unique and also then check for empty values in all three column POST_ID,POST AND LABEL:https://drive.google.com/file/d/1upf7qiGEQphLHsazAEP-blKQlvz2WlVh/view?usp=sharing
# this file is a anyone with a link file so directly download it in the env and save it as bi.csv...as for the duplicate values check it for the column POST .

import pandas as pd

# Download the file directly from Google Drive
!gdown --id 1upf7qiGEQphLHsazAEP-blKQlvz2WlVh -O bi.csv

# Load the dataset
df = pd.read_csv('bi.csv')

# Show label distribution
print("Label Distribution:")
print(df['LABEL'].value_counts())

# Check for duplicate POST_IDs
print("\nChecking for duplicate POST_IDs:")
duplicate_post_ids = df[df.duplicated(subset=['POST_ID'], keep=False)]
if not duplicate_post_ids.empty:
    print("Duplicate POST_IDs found:")
    print(duplicate_post_ids)
else:
    print("No duplicate POST_IDs found.")

# Check for empty values in specific columns
print("\nChecking for empty values:")
print("Empty values in POST_ID:", df['POST_ID'].isnull().sum())
print("Empty values in POST:", df['POST'].isnull().sum())
print("Empty values in LABEL:", df['LABEL'].isnull().sum())

# Check for duplicate values in the 'POST' column
print("\nChecking for duplicate POSTs:")
duplicate_posts = df[df.duplicated(subset=['POST'], keep=False)]
if not duplicate_posts.empty:
    print("Duplicate POSTs found:")
    print(duplicate_posts)
else:
    print("No duplicate POSTs found.")

# prompt: Now show 5 examples each without truncation of each label

# Function to display examples of each label
def display_examples(dataframe, label_column, text_column, num_examples=5):
    for label in dataframe[label_column].unique():
        print(f"\nExamples for label: {label}")
        examples = dataframe[dataframe[label_column] == label][text_column].sample(min(num_examples, len(dataframe[dataframe[label_column] == label][text_column])))
        for i, example in enumerate(examples):
            print(f"Example {i+1}:")
            print(example)

# Display 5 examples for each label without truncation
display_examples(df, 'LABEL', 'POST', num_examples=5)

# Calculate the length of each post
post_lengths = df['POST'].str.len()

# Calculate the average and maximum length
average_post_length = post_lengths.mean()
max_post_length = post_lengths.max()

print(f"Average post length: {average_post_length:.2f}")
print(f"Maximum post length: {max_post_length}")

# prompt: AS we are going to use MentalBERT here to train on this data...we need to output the no. of posts that exceed the input limit of teh transformer according to label wise distirbution of these

# Tokenize posts and count tokens
# MentalBERT uses a BERT-based tokenizer, typically max length is 512 tokens
# Let's assume a max length of 512 tokens for this example
from transformers import AutoTokenizer

# Load the tokenizer for MentalBERT (using a standard BERT base uncased as MentalBERT builds upon it)
# You might need to adjust this based on the specific MentalBERT model you are using
tokenizer = AutoTokenizer.from_pretrained("bert-base-uncased")

# Function to count tokens in a text
def count_tokens(text):
    if isinstance(text, str):
        return len(tokenizer.encode(text, add_special_tokens=True))
    return 0 # Handle potential non-string entries

# Apply the tokenization and count tokens
df['token_count'] = df['POST'].apply(count_tokens)

# Define the maximum input length for the transformer
max_input_length = 512

# Filter posts that exceed the input limit
exceeding_posts_df = df[df['token_count'] > max_input_length]

# Count the number of exceeding posts per label
exceeding_posts_count_by_label = exceeding_posts_df['LABEL'].value_counts()

print(f"\nNumber of posts exceeding the {max_input_length} token limit per label:")
print(exceeding_posts_count_by_label)

# You can also calculate the percentage of posts exceeding the limit per label
total_posts_by_label = df['LABEL'].value_counts()
exceeding_posts_percentage_by_label = (exceeding_posts_count_by_label / total_posts_by_label) * 100

print(f"\nPercentage of posts exceeding the {max_input_length} token limit per label:")
exceeding_posts_percentage_by_label

"""# Task
Split the dataset into 80% for training and 20% for validation, stratifying by label. Identify and chunk long posts in both sets using overlapping chunks while preserving the original `POST_ID`. Combine the short posts and chunks into new training and validation dataframes.

## Split data

### Subtask:
Divide the dataset into 80% for training and 20% for validation, ensuring stratification by label.

**Reasoning**:
Split the data into training and validation sets using stratification by label.
"""

from sklearn.model_selection import train_test_split

train_df, val_df = train_test_split(df, test_size=0.2, random_state=42, stratify=df['LABEL'])

"""## Identify long posts

### Subtask:
Identify and separate the posts in both the training and validation sets that exceed the maximum token limit.

**Reasoning**:
Filter the training and validation dataframes to separate posts exceeding the maximum token limit from those within the limit, as per the instructions.
"""

max_input_length = 512

long_posts_df = train_df[train_df['token_count'] > max_input_length]
short_posts_df = train_df[train_df['token_count'] <= max_input_length]

val_exceeding = val_df[val_df['token_count'] > max_input_length]
val_short = val_df[val_df['token_count'] <= max_input_length]

print("Shape of long_posts_df:", long_posts_df.shape)
print("Shape of short_posts_df:", short_posts_df.shape)
print("Shape of val_exceeding:", val_exceeding.shape)
print("Shape of val_short:", val_short.shape)

"""## Chunk long posts

### Subtask:
Implement overlapping chunking for the long posts in both the training and validation sets, keeping track of the original `POST_ID` for each chunk.

**Reasoning**:
Define the chunk_text function and apply it to the long posts in the training and validation sets to create chunked dataframes.
"""

def chunk_text(text, tokenizer, max_input_length, overlap_size):
    tokens = tokenizer.encode(text, add_special_tokens=True, truncation=False) # Do not truncate here
    chunks = []
    # Calculate step size
    step_size = max_input_length - overlap_size
    # Ensure step_size is at least 1
    if step_size <= 0:
        step_size = 1

    for i in range(0, len(tokens), step_size):
        # Ensure the chunk does not exceed max_input_length after adding special tokens
        chunk_tokens = tokens[i : i + max_input_length]
        # Decode the chunk and re-encode to check token count and truncate if necessary
        decoded_chunk = tokenizer.decode(chunk_tokens)
        re_encoded_chunk = tokenizer.encode(decoded_chunk, add_special_tokens=True, max_length=max_input_length, truncation=True)
        chunks.append(tokenizer.decode(re_encoded_chunk))

    return chunks

overlap_size = 50  # Define the overlap size

# Chunk long posts in the training set
chunked_train_posts = []
for index, row in long_posts_df.iterrows():
    chunks = chunk_text(row['POST'], tokenizer, max_input_length, overlap_size)
    for chunk in chunks:
        chunked_train_posts.append({'POST_ID': row['POST_ID'], 'LABEL': row['LABEL'], 'CHUNK': chunk})

chunked_train_posts_df = pd.DataFrame(chunked_train_posts)

# Chunk long posts in the validation set
chunked_val_posts = []
for index, row in val_exceeding.iterrows():
    chunks = chunk_text(row['POST'], tokenizer, max_input_length, overlap_size)
    for chunk in chunks:
        chunked_val_posts.append({'POST_ID': row['POST_ID'], 'LABEL': row['LABEL'], 'CHUNK': chunk})

chunked_val_posts_df = pd.DataFrame(chunked_val_posts)

print("Shape of chunked_train_posts_df:", chunked_train_posts_df.shape)
print("Shape of chunked_val_posts_df:", chunked_val_posts_df.shape)

"""## Combine data

### Subtask:
Combine the short posts and the generated chunks into new training and validation dataframes.

**Reasoning**:
Combine the short posts and the generated chunks into new training and validation dataframes by renaming the POST column to CHUNK in the short posts dataframes and then concatenating with the chunked dataframes. Finally, display the shapes of the combined dataframes.
"""

# Rename 'POST' column to 'CHUNK' in short posts dataframes for concatenation
short_posts_for_concat = short_posts_df.rename(columns={'POST': 'CHUNK'})
val_short_for_concat = val_short.rename(columns={'POST': 'CHUNK'})

# Concatenate the short posts and chunked long posts for training set
combined_train_df = pd.concat([short_posts_for_concat[['POST_ID', 'LABEL', 'CHUNK']], chunked_train_posts_df], ignore_index=True)

# Concatenate the short posts and chunked long posts for validation set
combined_val_df = pd.concat([val_short_for_concat[['POST_ID', 'LABEL', 'CHUNK']], chunked_val_posts_df], ignore_index=True)

print("Shape of combined_train_df:", combined_train_df.shape)
print("Shape of combined_val_df:", combined_val_df.shape)

"""## Summary:

### Data Analysis Key Findings

*   The initial dataset was split into training (80%) and validation (20%) sets, stratified by the 'LABEL' column, resulting in `train_df` and `val_df`.
*   Posts exceeding a maximum token length of 512 were identified in both training and validation sets, creating `long_posts_df` (678 entries) and `val_exceeding` (174 entries). Correspondingly, short posts were separated into `short_posts_df` (7206 entries) and `val_short` (1797 entries).
*   Long posts were processed using overlapping chunking with an overlap size of 50 tokens, preserving the original `POST_ID` and `LABEL`. This created `chunked_train_posts_df` and `chunked_val_posts_df`.
*   The short posts (with the 'POST' column renamed to 'CHUNK') were combined with the respective chunked dataframes. The final combined training dataframe (`combined_train_df`) contains 8760 entries and the combined validation dataframe (`combined_val_df`) contains 2191 entries.

### Insights or Next Steps

*   The process successfully handled long text posts by chunking them while maintaining the link to their original `POST_ID`, which is crucial for potential post-processing or analysis at the original post level.
*   The stratified split ensures that the distribution of labels is consistent across the training and validation sets, which is important for model training and evaluation.

## Verify chunk lengths

### Subtask:
Check if the token counts of the 'CHUNK' column in `combined_train_df` and `combined_val_df` are within the `max_input_length`.

**Reasoning**:
Calculate the token count for each chunk in the combined training and validation dataframes and verify that the maximum token count in both dataframes is less than or equal to `max_input_length`.
"""

# Calculate token counts for chunks in the combined training dataframe
combined_train_df['chunk_token_count'] = combined_train_df['CHUNK'].apply(count_tokens)

# Check if all chunks in the training set are within the limit
train_chunks_within_limit = (combined_train_df['chunk_token_count'] <= max_input_length).all()

print(f"All training chunks are within the {max_input_length} token limit: {train_chunks_within_limit}")
if not train_chunks_within_limit:
    print("Maximum token count in combined_train_df:", combined_train_df['chunk_token_count'].max())

# Calculate token counts for chunks in the combined validation dataframe
combined_val_df['chunk_token_count'] = combined_val_df['CHUNK'].apply(count_tokens)

# Check if all chunks in the validation set are within the limit
val_chunks_within_limit = (combined_val_df['chunk_token_count'] <= max_input_length).all()

print(f"All validation chunks are within the {max_input_length} token limit: {val_chunks_within_limit}")
if not val_chunks_within_limit:
    print("Maximum token count in combined_val_df:", combined_val_df['chunk_token_count'].max())

"""## Tokenize and prepare data for MentalBERT

### Subtask:
Tokenize the combined training and validation dataframes (`combined_train_df` and `combined_val_df`) using the `mental/mental-bert-base-uncased` tokenizer and convert them into a format suitable for training.

**Reasoning**:
Load the MentalBERT tokenizer and tokenize the 'CHUNK' column in both the combined training and validation dataframes, applying padding, truncation, and returning PyTorch tensors. Then, create Dataset objects from the tokenized data and labels.
"""

from transformers import AutoTokenizer
import torch
from torch.utils.data import Dataset, DataLoader

# Load the tokenizer for MentalBERT
tokenizer = AutoTokenizer.from_pretrained("mental/mental-bert-base-uncased")

# Tokenize the training data
train_encodings = tokenizer(
    combined_train_df['CHUNK'].tolist(),
    truncation=True,
    padding=True,
    max_length=max_input_length,
    return_tensors='pt'
)

# Tokenize the validation data
val_encodings = tokenizer(
    combined_val_df['CHUNK'].tolist(),
    truncation=True,
    padding=True,
    max_length=max_input_length,
    return_tensors='pt'
)

# Create Dataset objects
class MentalHealthDataset(Dataset):
    def __init__(self, encodings, labels):
        self.encodings = encodings
        self.labels = labels

    def __getitem__(self, idx):
        item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
        item['labels'] = torch.tensor(self.labels[idx])
        return item

    def __len__(self):
        return len(self.labels)

train_dataset = MentalHealthDataset(train_encodings, combined_train_df['LABEL'].tolist())
val_dataset = MentalHealthDataset(val_encodings, combined_val_df['LABEL'].tolist())

print("Training dataset size:", len(train_dataset))
print("Validation dataset size:", len(val_dataset))

"""## Define the MentalBERT model

### Subtask:
Load the `mental/mental-bert-base-uncased` model for sequence classification with the appropriate number of labels.

**Reasoning**:
Load the `mental/mental-bert-base-uncased` pre-trained model for sequence classification using `AutoModelForSequenceClassification` and specify the number of output labels based on the unique values in the 'LABEL' column.
"""

from transformers import AutoModelForSequenceClassification

# Define the number of labels
num_labels = combined_train_df['LABEL'].nunique()

# Load the MentalBERT model for sequence classification
model = AutoModelForSequenceClassification.from_pretrained(
    "mental/mental-bert-base-uncased",
    num_labels=num_labels
)

"""## Set up training arguments

### Subtask:
Define the training parameters for the MentalBERT model.

**Reasoning**:
Define the training arguments using the `TrainingArguments` class from the `transformers` library, specifying parameters such as the output directory, number of epochs, batch size, learning rate, and evaluation strategy.
"""

from transformers import TrainingArguments

# Define training arguments
training_args = TrainingArguments(
    output_dir='./results_of_nlp',          # Output directory for checkpoints and predictions
    num_train_epochs=3,              # Number of training epochs
    per_device_train_batch_size=16,  # Batch size per device during training
    per_device_eval_batch_size=16,   # Batch size for evaluation
    warmup_steps=500,                # Number of warmup steps for learning rate scheduler
    weight_decay=0.01,               # Strength of weight decay
    logging_dir='./logs',            # Directory for storing logs
    logging_steps=500,
    eval_strategy="epoch",     # Evaluate every epoch
    save_strategy="epoch",           # Save checkpoint every epoch
    load_best_model_at_end=True,     # Load the best model at the end of training
)

"""## Train the model

### Subtask:
Train the MentalBERT model using the prepared training and validation datasets and the defined training arguments.

**Reasoning**:
Initialize a `Trainer` object with the model, training arguments, and datasets, then start the training process by calling the `train()` method.
"""

from transformers import Trainer

# Initialize the Trainer
trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=train_dataset,
    eval_dataset=val_dataset,
)

# Start training
trainer.train()

from google.colab import drive
drive.mount('/content/drive')

"""## Save the model and tokenizer

### Subtask:
Save the trained MentalBERT model and its tokenizer to the specified Google Drive path.

**Reasoning**:
Save the trained model and tokenizer using the `save_model` method of the `Trainer` object to the user-specified path in Google Drive.
"""

output_dir = "/content/drive/MyDrive/models/DATASET 3.0/MODELS MADE USING DATASET 3.0"

# Save the model and tokenizer
trainer.save_model(output_dir)

print(f"Model and tokenizer saved to {output_dir}")

"""## Save the tokenizer

### Subtask:
Save the MentalBERT tokenizer to the same directory where the model was saved.

**Reasoning**:
Save the tokenizer using the `save_pretrained()` method to the specified output directory so that it can be loaded along with the model for inference.
"""

output_dir = "/content/drive/MyDrive/models/DATASET 3.0/MODELS MADE USING DATASET 3.0"

# Save the tokenizer
tokenizer.save_pretrained(output_dir)

print(f"Tokenizer saved to {output_dir}")

!gdown --id 1zxI5OcUO9_Q2hc68T_6v8bs_80EVNlBm

import pandas as pd

# Load the dataset
try:
  df_test = pd.read_csv('test.csv')
except FileNotFoundError:
  print("File not found. Please ensure the file is downloaded correctly.")
  exit()

# Filter for labels 0 and 1
df_test_filtered = df_test[df_test['LABEL'].isin([0, 1])].copy()

# Check if all 'POST_ID' are unique
are_post_ids_unique_test = df_test_filtered['POST_ID'].is_unique

# Check for empty entries in 'POST_ID', 'POST', and 'LABEL'
empty_entries_test = df_test_filtered[df_test_filtered['POST_ID'].isnull() | df_test_filtered['POST'].isnull() | df_test_filtered['LABEL'].isnull()]


# Check for duplicate 'POST' entries
duplicate_posts_test = df_test_filtered[df_test_filtered.duplicated(subset=['POST'], keep=False)]

# Check for duplicate 'POST_ID' entries
duplicate_post_ids_test = df_test_filtered[df_test_filtered.duplicated(subset=['POST_ID'], keep=False)]

# Check for duplicate 'LABEL' entries (this will show all entries with the same label if there are more than one, which is expected)
duplicate_labels_test = df_test_filtered[df_test_filtered.duplicated(subset=['LABEL'], keep=False)]


# Print the results of validation checks
print("Are all 'POST_ID' unique in test data:", are_post_ids_unique_test)
print("\nEntries with empty values in test data:")
print(empty_entries_test)
print("\nNumber of duplicate 'POST' entries in test data:", len(duplicate_posts_test))
print("\nNumber of duplicate 'POST_ID' entries in test data:", len(duplicate_post_ids_test))
print("\nNumber of duplicate 'LABEL' entries in test data (expected for multiple entries per label):", len(duplicate_labels_test))


# Show label distribution
print("\nLabel distribution in filtered test data:")
print(df_test_filtered['LABEL'].value_counts())

"""# Task
Prepare the test data by chunking long posts with overlapping chunks while preserving `POST_ID`, combine with short posts, tokenize, create a dataset, load the trained model from "/content/drive/MyDrive/models/DATASET 3.0/MODELS MADE USING DATASET 3.0", make predictions, aggregate chunk predictions by `POST_ID`, and evaluate the model with metrics and a confusion matrix.

## Identify and chunk long test posts

### Subtask:
Identify and separate the posts in the test set that exceed the maximum token limit and apply overlapping chunking while preserving the original `POST_ID`.

**Reasoning**:
Calculate token counts for the test data, separate long and short posts, and then chunk the long posts with overlap, preserving the original POST_ID and LABEL.
"""

# Calculate token count for each post in the filtered test data
df_test_filtered['token_count'] = df_test_filtered['POST'].apply(count_tokens)

# Define the maximum input length for the transformer
max_input_length = 512

# Filter posts that exceed the input limit and those within the limit
long_test_posts_df = df_test_filtered[df_test_filtered['token_count'] > max_input_length].copy()
short_test_posts_df = df_test_filtered[df_test_filtered['token_count'] <= max_input_length].copy()

# Define the overlap size
overlap_size = 50

# Chunk long posts in the test set
chunked_test_posts = []
for index, row in long_test_posts_df.iterrows():
    chunks = chunk_text(row['POST'], tokenizer, max_input_length, overlap_size)
    for chunk in chunks:
        chunked_test_posts.append({'POST_ID': row['POST_ID'], 'LABEL': row['LABEL'], 'CHUNK': chunk})

chunked_test_posts_df = pd.DataFrame(chunked_test_posts)

print("Shape of long_test_posts_df:", long_test_posts_df.shape)
print("Shape of short_test_posts_df:", short_test_posts_df.shape)
print("Shape of chunked_test_posts_df:", chunked_test_posts_df.shape)

"""**Reasoning**:
Combine the short test posts and the chunked long test posts into a single dataframe and rename the 'POST' column in the short test posts dataframe to 'CHUNK' before concatenation.


"""

# Rename 'POST' column to 'CHUNK' in short test posts dataframe for concatenation
short_test_posts_for_concat = short_test_posts_df.rename(columns={'POST': 'CHUNK'}).copy()

# Concatenate the short test posts and chunked long test posts
combined_test_df = pd.concat([short_test_posts_for_concat[['POST_ID', 'LABEL', 'CHUNK']], chunked_test_posts_df], ignore_index=True)

print("Shape of combined_test_df:", combined_test_df.shape)

"""## Prepare test data for the model

### Subtask:
Tokenize the combined test data using the same tokenizer used for training and create a `Dataset` object.

**Reasoning**:
Tokenize the 'CHUNK' column of the combined test dataframe and create a Dataset object.
"""

# Tokenize the test data
test_encodings = tokenizer(
    combined_test_df['CHUNK'].tolist(),
    truncation=True,
    padding=True,
    max_length=max_input_length,
    return_tensors='pt'
)

# Create Dataset object for test data
test_dataset = MentalHealthDataset(test_encodings, combined_test_df['LABEL'].tolist())

print("Test dataset size:", len(test_dataset))

"""## Load the trained model

### Subtask:
Load the fine-tuned MentalBERT model from Google Drive.

**Reasoning**:
Load the MentalBERT model for sequence classification from the saved directory in Google Drive.
"""

from transformers import AutoModelForSequenceClassification

# Define the path to the saved model in Google Drive
output_dir = "/content/drive/MyDrive/models/DATASET 3.0/MODELS MADE USING DATASET 3.0"

# Load the model
model = AutoModelForSequenceClassification.from_pretrained(output_dir)

print(f"Model loaded successfully from {output_dir}")

"""## Evaluate the model on chunked test data

### Subtask:
Make predictions on the `test_dataset` using the loaded model and calculate evaluation metrics and a confusion matrix.

**Reasoning**:
Use the `Trainer` object to predict on the test dataset, then calculate evaluation metrics and generate a confusion matrix using the predicted labels and the true labels.
"""

from sklearn.metrics import accuracy_score, precision_recall_fscore_support, confusion_matrix
import numpy as np

# Make predictions on the test set
predictions = trainer.predict(test_dataset)

# Get predicted labels
predicted_labels = np.argmax(predictions.predictions, axis=1)

# Get true labels
true_labels = test_dataset.labels

# Calculate evaluation metrics
accuracy = accuracy_score(true_labels, predicted_labels)
precision, recall, f1, _ = precision_recall_fscore_support(true_labels, predicted_labels, average='binary') # Use 'binary' for binary classification

print(f"Accuracy: {accuracy:.4f}")
print(f"Precision: {precision:.4f}")
print(f"Recall: {recall:.4f}")
print(f"F1 Score: {f1:.4f}")

# Generate confusion matrix
conf_matrix = confusion_matrix(true_labels, predicted_labels)
print("\nConfusion Matrix:")
print(conf_matrix)

import random

# Define 60 complex and realistic custom journal entries for Label 0 (Control)
custom_entries_label_0_new = [
    "Woke up feeling refreshed after a full night's sleep. The birds were singing outside my window, and the sun was shining. Made a healthy breakfast and planned out my tasks for the day. Feeling optimistic and ready to be productive. I have a challenging work project that requires focus, but I'm confident I can handle it. Planning to take short breaks to stretch and clear my head. Later, I'll go for a run in the park to get some exercise and enjoy the outdoors. In the evening, I'm meeting friends for dinner and a movie. Looking forward to a relaxing and enjoyable night. It's important to balance work and leisure for overall well-being. I'm grateful for the simple pleasures in life and the people I share them with. Staying positive and focused on my goals.",
    "Spent the afternoon volunteering at the local animal shelter. Helped clean kennels, played with the dogs, and socialized with the cats. It's a rewarding experience to see the animals happy and getting attention. One little kitten was particularly playful and kept chasing my shoelaces. It made me smile. I'm considering fostering a cat in the future, but I need to make sure my apartment is suitable. The shelter is always in need of volunteers and donations. It's a great way to give back to the community and make a difference in the lives of these animals. Feeling a sense of purpose and fulfillment after spending time there. Encouraging others to volunteer and support animal welfare.",
    "Had a productive brainstorming session with my team at work. We generated a lot of new ideas and came up with some innovative solutions to a challenging problem. Feeling creative and collaborative. Everyone contributed, and the synergy was great. It's important to foster a creative environment where everyone feels comfortable sharing their ideas. Planning to refine the best ideas and start developing them further. It's exciting to be part of a team that is pushing boundaries and striving for innovation. We're aiming to deliver a high-quality product that will benefit our users and make a positive impact in the industry.",
    "Spent the evening attending a live music performance. The band was amazing, and the energy in the room was incredible. Felt completely immersed in the music and enjoyed every moment. It's a great way to unwind and experience the power of live performance. Planning to go to more concerts in the future, maybe check out some different genres. Music is a powerful form of expression and can evoke strong emotions. It's a universal language that connects people and brings joy. Sharing this experience with friends made it even more special and memorable. Looking forward to discovering new artists and expanding my musical horizons.",
    "Successfully negotiated a complex deal at work today. It required careful planning, strategic thinking, and effective communication. Feeling confident and accomplished after reaching a mutually beneficial agreement. It's important to be prepared and assertive in negotiations, but also willing to compromise and find common ground. Planning to celebrate with a nice dinner tonight to acknowledge the hard work and successful outcome. This achievement reinforces my confidence in my abilities and motivates me to take on even greater challenges in the future. Continuously honing my negotiation skills is a priority for professional growth and success in my career.",
    "Spent the afternoon exploring a historical site. Learned so much about the past and the people who lived there. Felt a sense of connection to history and a deeper understanding of the world. It's important to learn from the past and appreciate the struggles and achievements of those who came before us. Planning to visit more historical sites in the future, maybe take a guided tour to learn even more. History is a fascinating subject that can teach us a lot about ourselves and our place in the world. Reflecting on how past events have shaped the present and influenced our culture and society is a valuable exercise.",
    "Had a productive day catching up on emails and administrative tasks. It's not the most exciting work, but it's necessary to stay organized and efficient. Feeling a sense of relief and control after clearing out my inbox and completing pending tasks. Planning to implement some new strategies to manage my emails more effectively in the future to avoid feeling overwhelmed. It's important to stay on top of administrative tasks to maintain a smooth workflow and ensure that important information is not missed. Dedicating specific time slots for these tasks can improve efficiency and reduce stress levels significantly.",
    "Spent the evening watching a thought-provoking documentary about climate change. Learned about the challenges we face and the actions we can take to make a difference. Felt a sense of urgency and a desire to contribute to solutions. Planning to make some changes in my own life to reduce my environmental impact, like using less plastic and conserving energy. It's important to be informed about important global issues and take action to create a better future. Engaging in discussions with others about these issues can raise awareness and inspire collective action towards a more sustainable planet for future generations.",
    "Had a successful training session at work today. Learned a new software program that will help me be more productive. Feeling confident and ready to apply my new skills. It's important to continue learning and developing your skills throughout your career. Technology is constantly evolving, and it's essential to stay up-to-date to remain competitive. Planning to practice using the new software to become more proficient and explore its full capabilities. Continuous learning is key to professional growth and success in any field, enabling you to adapt to new challenges and opportunities effectively and efficiently over time.",
    "Spent the afternoon working on my personal website. Updated my portfolio, added new content, and improved the design. Feeling creative and proud of my online presence. It's important to have a professional online presence to showcase your skills and experience to potential employers or clients. Planning to promote my website on social media and network with others in my field to increase visibility and opportunities. Building a strong personal brand online can open doors and create connections that would not be possible otherwise, contributing to professional growth and career advancement significantly.",
    "Had a relaxing day at the spa. Enjoyed a massage, a facial, and some time in the sauna. Feeling pampered and refreshed. It's important to take time for yourself and prioritize self-care to maintain your physical and mental well-being. Stress can take a toll on your health, and it's essential to find ways to relax and rejuvenate. Planning to make spa visits a regular part of my self-care routine to reduce stress levels and improve overall health. Investing in self-care is an investment in your overall happiness and longevity, allowing you to be more productive and resilient in facing life's challenges effectively.",
    "Spent the evening attending a book club meeting. Discussed a fascinating novel with a group of enthusiastic readers. Enjoyed sharing my thoughts and hearing different perspectives. It's a great way to connect with others who share your interests and expand your literary horizons. Planning to suggest a new book for the next meeting and explore different genres and authors. Engaging in intellectual discussions and sharing ideas with others can broaden your perspective and deepen your understanding of the world around you, fostering intellectual growth and personal development significantly over time.",
    "Had a productive day meal prepping for the week. Cooked healthy and delicious meals that I can easily grab and go. Feeling organized and prepared for the busy week ahead. It's important to eat healthy to maintain your physical and mental well-being. Planning to try some new recipes next week to keep things interesting and explore different cuisines. Meal prepping saves time and money, and it helps you stay on track with your dietary goals and maintain a healthy lifestyle consistently. Taking the time to plan and prepare your meals in advance can have a significant positive impact on your overall health and energy levels throughout the week.",
    "Spent the afternoon volunteering at a local food bank. Helped sort and pack food donations for those in need. Felt a sense of purpose and fulfillment in contributing to the community and helping those who are less fortunate. It's important to give back and support causes that you believe in and make a positive impact on the world. Planning to volunteer there regularly to continue contributing to this important cause and make a difference in the lives of others. Volunteering is a rewarding experience that reminds you to be grateful for what you have and to help others whenever you can, fostering a sense of community and compassion.",
    "Had a successful fundraising event for a local charity. We raised a significant amount of money to support a worthy cause. Feeling proud of my efforts and the generosity of the community. It's important to support causes that you believe in and make a positive impact on the world. Planning to get involved in more fundraising events in the future to continue contributing to charitable initiatives and make a difference in the lives of those in need. Organizing and participating in fundraising events can be a challenging but ultimately rewarding experience, bringing people together for a common goal and creating positive change in the community.",
    "Spent the evening attending a workshop on photography. Learned about different techniques and settings to take better pictures. Feeling inspired and eager to practice my new skills and explore the art of photography further. Photography is a great way to capture memories, express your creativity, and see the world in a new way. Planning to take my camera with me more often and practice taking pictures in different settings to improve my skills and develop my own unique style. Learning a new skill like photography can be a fun and rewarding hobby that allows you to express yourself creatively and capture the beauty of the world around you.",
    "Had a productive day cleaning and organizing my garage. It was a bit of a mess, but it feels good to have everything in its place. Found some old tools that I had forgotten about. Feeling organized and efficient. Planning to do this regularly to keep my garage tidy and maximize the usable space. It's important to maintain a clean and organized living space, even the less visible areas like the garage, to reduce stress and improve overall productivity. Decluttering and organizing your physical surroundings can have a positive impact on your mental clarity and sense of control in your life significantly.",
    "Spent the afternoon working on a woodworking project. Building a small bookshelf for my living room. Enjoying the process of working with my hands and creating something tangible. Feeling creative and accomplished. Woodworking is a great way to de-stress and express your creativity. Planning to build more furniture in the future, maybe a coffee table next, to furnish my apartment with handmade pieces. It's a rewarding hobby that allows you to create functional and beautiful objects while developing valuable practical skills and fostering a sense of craftsmanship and accomplishment.",
    "Had a successful presentation at work today. Felt confident and delivered my message effectively to my colleagues and superiors. Received positive feedback and recognition for my work. Feeling accomplished and proud of my efforts. It's important to be prepared and practice your presentations to deliver them effectively and engage your audience. Public speaking is a valuable skill that can help you advance in your career and effectively communicate your ideas to others. Planning to seek out more opportunities to give presentations in the future to continue developing this important skill and increase my visibility within the organization.",
    "Spent the evening learning about personal branding and networking. Read articles, watched videos, and listened to podcasts to gain insights and knowledge. Feeling more knowledgeable and empowered to build my professional network and advance my career. Planning to attend some networking events in the near future to connect with others in my field and explore potential opportunities for collaboration or mentorship. Building a strong professional network is essential for career growth and development, opening doors to new opportunities and providing valuable support and guidance from experienced professionals in your industry.",
    "Had a relaxing day at the park with a good book. Found a quiet spot under a tree and lost myself in the story, escaping from the stresses of daily life. Feeling peaceful and refreshed. It's important to take time for yourself and enjoy the simple pleasures in life to maintain your mental well-being. Reading is a great way to unwind and expand your knowledge and imagination. Planning to read more often and explore different genres and authors to broaden my literary horizons and continue learning and growing as a person. Simple moments of peace and quiet in nature can be incredibly rejuvenating and restorative.",
    "Spent the afternoon volunteering at an animal shelter. Helped clean kennels, played with the dogs, and socialized with the cats. Felt a sense of purpose and fulfillment in helping animals in need and contributing to their well-being. It's important to give back to the community and support causes that you care about and make a positive impact on the lives of others. Planning to volunteer there regularly to continue supporting this important cause and make a difference in the lives of these animals. Volunteering is a rewarding experience that reminds you to be grateful for what you have and to help others whenever you can, fostering empathy and compassion.",
    "Had a productive day working on my online course. Making good progress on the lessons and assignments, and feeling motivated to complete the course and gain new skills. It's important to invest in yourself and your education to advance in your career and stay competitive in the job market. Online courses offer a flexible and convenient way to learn new things and acquire valuable skills from the comfort of your own home. Planning to enroll in another online course after I finish this one to continue learning and developing my professional skillset and expertise in my field.",
    "Spent the evening attending a community meeting. Discussed local issues and brainstormed solutions with my neighbors, working together to improve our community. Felt a sense of civic responsibility and a desire to contribute to making my community a better place to live. It's important to be involved in your community and work together to address challenges and create positive change for everyone. Planning to attend more community meetings in the future to stay informed and contribute to local initiatives that can improve the quality of life for all residents in the neighborhood and surrounding areas.",
    "Had a successful art class today. Learned a new painting technique and created a beautiful piece of art that I'm proud of. Feeling creative and accomplished. Art is a great way to express yourself, de-stress, and explore your creativity. Planning to take more art classes in the future to continue developing my artistic skills and experiment with different mediums and techniques. It's a fun and rewarding hobby that allows you to tap into your creativity and create something beautiful and meaningful. Expressing yourself through art can be a powerful form of therapy and self-discovery.",
    "Spent the afternoon visiting a local museum. Explored the exhibits and learned about art, history, and culture. Felt inspired and enriched by the experience. It's important to engage with art and culture to broaden your horizons and deepen your understanding of the world around you. Planning to visit more museums in the future and attend cultural events to continue learning and growing as a person. Immersing yourself in art and culture can be a transformative experience that opens your mind to new perspectives and ideas from different time periods and cultures around the world.",
    "Had a productive day organizing my finances. Created a budget, paid bills, and reviewed my investments. Feeling in control and responsible. It's important to stay on top of your finances to achieve your financial goals and secure your future. Planning to track my spending more closely and look for ways to save money. Managing your finances effectively can reduce stress and provide a sense of security and peace of mind, allowing you to plan for the future and make informed decisions about your money with confidence and clarity.",
    "Spent the evening learning a new skill online. Taking a coding course to develop my programming abilities. Finding it challenging but also very rewarding. It's important to continue learning and developing new skills to stay relevant in the job market and expand your opportunities. Planning to dedicate time each day to practice coding and work on small projects to reinforce my learning. Learning a new skill like coding can be a valuable asset in today's technology-driven world, opening doors to new career paths and opportunities for innovation and creativity in various industries and fields.",
    "Had a fun day exploring a new hiking trail. Enjoyed being in nature and getting some exercise. The scenery was beautiful and the air was fresh. Feeling refreshed and energized. It's important to spend time outdoors and connect with nature for your physical and mental well-being. Planning to explore more hiking trails in the future and discover new places to enjoy the beauty of the natural world. Hiking is a great way to de-stress, clear your head, and appreciate the wonders of nature while staying active and healthy.",
    "Spent the afternoon working on a creative writing project. Writing a short story and developing the characters and plot. Finding it challenging but also very fulfilling. It's a great way to express myself and explore my imagination. Planning to set aside time each day to write and develop my skills as a writer. Creative writing can be a powerful form of self-expression and a way to escape into different worlds and perspectives. It allows you to explore your thoughts and emotions in a creative and imaginative way, fostering self-discovery and personal growth.",
]

# Define 60 complex and realistic custom journal entries for Label 1 (Schizophrenic)
custom_entries_label_1_new = [
    "The voices are back, louder than ever. They're whispering secrets about the government, about how they're controlling our minds through the television. I see the hidden messages in the commercials, the subtle symbols that confirm their conspiracy. It's hard to concentrate on anything else when they're in my head, a constant barrage of noise and paranoia. I feel like I'm the only one who can see the truth, and it's a heavy burden to carry. I try to ignore them, to focus on something else, but they're relentless, weaving themselves into my thoughts, making me question everything I know and eroding my sense of reality completely.",
    "I saw the figures again today, in the corner of my eye. They were standing in the shadows, watching me, their shapes shifting and blurring at the edges. When I turned to look directly, they vanished, but I know they were real. They're always there, lurking, waiting. I don't know what they want, but it fills me with a creeping dread. I feel like I'm being hunted, constantly on edge, unable to relax even in the safety of my own home. This pervasive sense of being watched is exhausting, making it hard to trust my own senses and distinguish between what is real and what is a product of my own fractured mind, leaving me isolated and fearful always.",
    "My thoughts are racing, colliding with each other like a train wreck. I can't keep track of anything, jumping from one idea to the next without any connection. It's a chaotic storm in my head, and I can't find a moment of peace. I try to write things down, to organize my thoughts, but the words scatter like frightened birds. I feel like I'm losing my grip on reality, that my mind is unraveling. This disorganization of thought makes it impossible to communicate effectively, isolating me from others and deepening my sense of being lost and overwhelmed in the simplest of daily interactions and conversations, leaving me unable to connect.",
    "I'm convinced that people are stealing my thoughts. I'll have an idea, a unique insight, and then later I'll hear someone else say the exact same thing, as if they plucked it directly from my mind. It's a violation of my privacy, a constant intrusion into my innermost world. I try to shield my thoughts, to build a wall around them, but it's futile. They just flow out, uncontrollable, exposing my vulnerabilities and fears to strangers. This terrifying lack of control over my own mind is a constant source of anxiety, making me wary of everyone around me and reinforcing my belief that I am not safe in my own thoughts or in the presence of others ever.",
    "I feel detached from my body, like I'm just an observer watching myself go through the motions of life. My limbs feel heavy, not my own, and my movements feel unnatural, robotic. It's a strange and unsettling sensation, like I'm a puppet on strings, controlled by an invisible force. My emotions feel distant, muted, as if they belong to someone else. It's hard to connect with people, to feel genuine joy or sadness. This pervasive sense of unreality and lack of control over my own physical self is deeply disturbing, leaving me feeling alienated from my own being and the world around me always.",
    "The internet is a web of hidden messages, coded in images, text, and even the layout of websites. I spend hours online, searching for clues, trying to decipher the complex patterns that are meant only for me. They're communicating with me, the people who know the truth, the people who are trying to warn me about the impending changes. It's a dangerous game, and I have to be careful, but I need to know what's going on. I feel like I'm on the verge of a major discovery, something that will change everything. This obsessive quest consumes my life, leaving little room for anything else, driving me deeper into isolation and a world of perceived secrets.",
    "I'm seeing things that aren't there. Flashes of light illuminate empty rooms, distorted faces appear in the patterns on the wallpaper, and objects move when I'm not looking. It's like my eyes are playing tricks on me, but it feels so real, so vivid. It's unsettling and makes it hard to trust my own senses, to know what is real and what is a hallucination. I try to ignore them, to tell myself that it's just my imagination, but they persist, a constant reminder that something is wrong. This visual intrusion into my reality is terrifying, making it difficult to feel safe or grounded in my own environment and always questioning what is truly before my eyes.",
    "I believe that I have a special connection to animals, that they communicate with me in a language that only I can understand. They send me messages through their barks, meows, and movements, warning me of danger or guiding me on my path. I spend hours observing them, trying to decipher their subtle cues, listening to their unspoken words. It's a hidden world, and I am the only one privy to its secrets. This unique connection, while profound to me, is often dismissed or misunderstood by others, further emphasizing my feeling of being different and alone in my perception of the world and its hidden communications with me always.",
    "I feel like my body is being invaded by an external force. It's like something is inside me, controlling my thoughts and actions, making me do things against my will. My limbs move independently, my voice speaks words that are not my own. It's a disturbing sensation, this loss of control over my own being. I try to resist, to fight back against this invisible force, but it's a constant struggle, exhausting and futile. This terrifying feeling of being possessed is a source of deep distress, leaving me feeling alienated from myself and trapped in a body that no longer feels like my own, a constant battle for autonomy and self.",
    "I'm convinced that there are hidden cameras and listening devices in my apartment, that someone is watching my every move, listening to my every word. I search for them tirelessly, in the walls, in the ceiling, in everyday objects, but I never find them. Yet, I know they're there. I can feel their eyes on me, their unseen presence always watching. This constant surveillance creates a pervasive sense of paranoia and erodes any feeling of privacy or safety. I long for a space where I can be truly alone and unobserved, but this pervasive belief makes that impossible, leaving me in a perpetual state of unease and hyper-vigilance in my own home.",
    "My thoughts are being broadcasted, sent out into the world for everyone to hear. I can feel them leaving my head, like radio waves, reaching out to strangers, exposing my deepest fears and secrets. It's a terrifying feeling, knowing that my innermost thoughts are not my own, that they are being shared with others against my will. I try to shield my mind, to build a barrier, but it's impossible. They just flow out, uncontrollable, leaving me feeling exposed and vulnerable. This perceived lack of control over my own mind is a constant source of anxiety and fear, making me wary of everyone and everything around me always.",
    "I believe that I have special powers, abilities that others don't possess. I can influence events with my thoughts, communicate with people telepathically, and even control the weather. It sounds unbelievable, but I know it's true. I've seen the evidence, the subtle changes in the world around me that are a result of my abilities. It's a heavy responsibility, and I need to use my powers wisely. It's a secret world, and I'm a part of it. I just need to learn how to control my abilities and use them for good, a solitary journey into a realm of perceived extraordinary powers and their potential impact on the world.",
    "I'm seeing patterns in everything, in the numbers on license plates, in the cracks on the sidewalk, in the clouds in the sky. They're not random; they're messages, coded information that I need to decipher. It's like the universe is speaking to me, revealing its secrets through a hidden language only I can understand. I spend hours analyzing these patterns, trying to understand what they mean. It's a complex puzzle, but I know the answer is there, just waiting to be discovered. This obsessive quest consumes me, driving me deeper into isolation and a world of perceived hidden meanings and universal secrets waiting for me to unlock.",
    "I feel like I'm living in a different reality, a world that is slightly off-kilter from the one everyone else experiences. The colors are too vibrant, the sounds too sharp, and the people seem different, somehow artificial, like characters in a play. It's a strange and unsettling feeling, like I'm an outsider looking in, unable to connect with the world around me in a meaningful way. This pervasive sense of unreality makes it difficult to trust my own perceptions and distinguish between what is real and what is a distortion of my mind, leaving me feeling lost and alone in an altered world.",
    "The news on the television is talking directly to me, sending me personalized messages and warnings about impending events. The anchors look into the camera, and I know they're speaking only to me, delivering coded information meant for my ears alone. It's like I have a direct line to the truth, a source of information that no one else has access to. It's a heavy responsibility, and I need to pay attention to what they're telling me. It's a secret world, and I'm a part of it, constantly seeking out these hidden messages to understand the full scope of what is happening and my role within it.",
    "I'm hearing voices, distinct and clear, even when there's no one else around. They comment on my thoughts, tell me what to do, and sometimes argue amongst themselves. It's like having a constant conversation in my head, but the voices aren't my own. They can be critical and demeaning, eroding my self-esteem, or they can be commanding, urging me to do things I know are wrong. This auditory intrusion is unsettling and makes it hard to concentrate, leaving me in a constant battle for control over my own mind and actions, seeking peace from the relentless internal noise always.",
    "I believe that my thoughts can influence the world around me. If I think about something hard enough, it will happen. I can make objects move without touching them, change the weather, and even influence people's decisions with the power of my mind alone. It sounds unbelievable, but I know it's true. I've seen the evidence, the subtle shifts in reality that are a result of my mental power. It's a heavy responsibility, and I need to be careful what I think about. It's a secret world, and I'm a part of it, a solitary figure wielding perceived extraordinary powers with unknown consequences.",
    "I'm convinced that people are stealing my thoughts. I'll have an idea, and then later I'll hear someone else say the exact same thing, as if they reached into my mind and took it. It's a violation of my privacy, a constant intrusion. I try to protect my thoughts, to keep them hidden, but it's impossible. They just flow out, uncontrollable, exposing my deepest fears and secrets to others. This terrifying feeling of having my thoughts stolen is a constant source of anxiety, making me wary of everyone around me and reinforcing my belief that my mind is not my own private space anymore.",
    "I'm seeing things that aren't there, intricate patterns and symbols that appear on walls and surfaces, pulsating and shifting before my eyes. They're not random; they're messages, coded information that I need to decipher to understand the true nature of reality. It's like the universe is speaking to me through a visual language only I can perceive. I spend hours analyzing these patterns, trying to understand what they mean. This obsessive quest consumes me, driving me deeper into isolation and a world of perceived hidden meanings and cosmic secrets waiting for my interpretation.",
    "I feel like I'm being controlled by an external force. It's like someone else is pulling the strings, making me do things that I don't want to do, my actions and words not feeling like my own. It's a disturbing feeling, this loss of control over my own being. I try to resist, to fight back against this invisible force, but it's a constant struggle, exhausting and futile. This terrifying feeling of being a puppet in someone else's show is a source of deep distress, leaving me feeling alienated from myself and trapped in a body that no longer feels like my own, a constant battle for autonomy and self-determination.",
    "I'm convinced that the government is spying on me through my electronics. My phone, my computer, my television, they're all being used to monitor my every move, every conversation. I see the evidence, the subtle glitches and anomalies that confirm their surveillance. It's a constant sense of being watched, and it makes me feel exposed and vulnerable, unable to relax even in the privacy of my own home. This pervasive belief of being monitored is a source of intense paranoia, making me wary of technology and reinforcing my isolation from the digital world and others within it always.",
    "I'm hearing noises that aren't there, scratching sounds in the walls, footsteps in the hallway, whispers coming from empty rooms. They're unsettling and make it hard to feel safe or at peace in my own home. I try to rationalize them away, to tell myself that it's just the house settling or the wind, but the sounds persist, a constant reminder of an unseen presence. This auditory intrusion disrupts my sleep and leaves me in a state of perpetual anxiety, making it difficult to find moments of quiet or calm, always on edge and listening for sounds that are not real.",
    "I believe that I am a historical figure, reincarnated in this time, with memories and knowledge of past lives. I have insights into events that happened centuries ago, a connection to history that transcends time. It sounds unbelievable, but I know it's true. I've seen the evidence, the uncanny connections between my life and the life of this historical figure. It's a heavy responsibility, knowing that I have a role to play in the present based on my past. This belief, while profound, also isolates me from others who cannot comprehend or accept the reality of my perceived past lives and their impact on the present world.",
    "I feel like I'm living in a simulation, that everything around me is artificial and not real, a construct designed to mimic life. The people, the places, the events, they all seem to be part of a grand design, a program that I'm trapped in. It's a strange and unsettling feeling, like I'm a character in a video game, unable to break free from the programmed reality. I try to find glitches, inconsistencies that will prove that this isn't real, but everything seems perfectly rendered. This terrifying thought, that my entire existence is just a program, leaves me questioning the very nature of reality and my place within it always.",
    "I'm convinced that there are hidden messages in advertisements. The images, the slogans, the music, they all contain coded information that is meant for me, trying to influence my decisions and control my thoughts. They're part of a vast conspiracy to manipulate the population, and I am the only one who can see through their deception. I spend hours analyzing these advertisements, trying to decipher the hidden meaning. This obsessive quest consumes my time and energy, leaving little room for anything else, driving me deeper into isolation and a world of perceived hidden controls and manipulative forces.",
    "I'm seeing things that aren't there, phantom objects and people that appear and disappear without a trace. It's like my mind is creating its own reality, a world that only I can see, a world that is both familiar and profoundly unreal. These visual hallucinations are unsettling and make it difficult to trust my own senses, to know what is real and what is a product of my own mind. I try to ignore them, to tell myself that it's just my imagination, but they persist, a constant intrusion of the unreal into my perception of the world, leaving me in a state of confusion and fear always.",
    "I believe that I can communicate with the dead. I hear their voices, feel their presence, and sometimes even see them, spectral figures that move at the periphery of my vision. They're trying to tell me something important, something about the afterlife that I need to know. I spend hours listening to them, trying to understand their messages, their whispers from beyond the veil. It's a hidden language, and I am the only one who can understand it. This perceived connection to the spirit world, while profound to me, isolates me from others who cannot share in or understand my experiences with the deceased always.",
    "I feel like my body is being invaded by an external force. It's like something is inside me, controlling my movements and thoughts, making me do things against my will. My limbs move independently, my voice speaks words that are not my own. It's a disturbing sensation, this loss of control over my own being. I try to resist, to fight back against this invisible force, but it's a constant struggle, exhausting and futile. This terrifying feeling of being possessed is a source of deep distress, leaving me feeling alienated from myself and trapped in a body that no longer feels like my own, a constant battle for autonomy and self-determination.",
    "I'm convinced that my food is being poisoned, that someone is trying to harm me through what I eat. I see subtle changes in the appearance and taste of my food, strange colors and textures, unusual smells that weren't there before. These are signs that confirm my suspicions. This pervasive belief of being targeted through my food creates a constant state of anxiety and hyper-vigilance around meals. I restrict my diet, avoid eating anything I haven't prepared myself, and constantly worry about the safety of my food, making eating a source of stress and fear rather than nourishment and sustenance.",
    "I see visual distortions, objects shimmering and vibrating, colors becoming intensely saturated or faded, the world around me appearing warped and unreal, like a funhouse mirror reflection. These visual anomalies are disorienting and make it difficult to navigate my environment, to trust what I see before me. I try to blink them away or rub my eyes, but they persist, altering my perception of reality. This constant visual interference is a source of confusion and anxiety, making it hard to interact with the world in a consistent or reliable manner and always questioning the visual information I receive.",
    "The voices are telling me to do things, sometimes benign, sometimes dangerous, their commands echoing in my mind. They are powerful and persuasive, and resisting them is a constant struggle, a battle of wills within my own head. It's terrifying to feel like I'm not in control of my own actions, that an external force is dictating my behavior. I try to find ways to silence them, to regain my autonomy, but they are relentless. This auditory intrusion and perceived lack of control are a constant source of fear and anxiety, making it difficult to live a normal life and maintain a sense of self and agency.",
    "I believe that I am being persecuted, that there are people or organizations actively trying to harm me or control my life, their intentions hidden but their actions clear. I see evidence of their interference everywhere, in coincidences that seem too deliberate, in the actions of strangers, in the messages I receive online and in the media. This pervasive sense of being targeted creates a constant state of hyper-vigilance and fear. I take precautions, alter my behavior, and isolate myself to protect myself, but the feeling of being hunted is relentless, eroding my trust in the world and leaving me in a perpetual state of alarm.",
    "I see distorted faces in everyday objects, in the patterns of wallpaper, the knots in wood, the shadows on the wall, their expressions shifting from neutral to menacing. They're not just fleeting images; they seem to watch me, their eyes following my movements. These visual distortions are unsettling and make it difficult to find peace or comfort in my surroundings. I try to avoid looking at patterns, to keep my gaze focused on clear, simple forms, but the faces seem to appear everywhere, a constant reminder that my perception of reality is altered and unreliable and that I am always being observed by unseen entities.",
    "I believe that I have a divine purpose, that I have been chosen for a special mission from a higher power, a calling that sets me apart from others. I receive signs and messages, guiding me on my path, revealing the truth about the world and my role within it. This belief gives my life meaning and direction, but it also isolates me from others who do not share my spiritual experiences or understand my perceived divine connection. I carry the weight of this responsibility, feeling a sense of urgency to fulfill my destiny, even if it means making difficult choices or facing opposition from those who do not comprehend my divine calling.",
    "I'm hearing sounds that are not there, music playing faintly from an empty room, conversations just outside my window, the ringing of a phone that isn't ringing, their source unknown but their presence undeniable. These auditory hallucinations are persistent and intrusive, disrupting my thoughts and making it difficult to focus. I try to identify the source of the sounds, but there is none, confirming that they are products of my own mind. This constant auditory interference is a source of frustration and anxiety, making it hard to find moments of quiet or peace, leaving me in a perpetual state of alertness and confusion.",
    "I feel like I'm losing my mind, that my grip on reality is slipping, that I am descending into a state of madness. My thoughts are becoming increasingly fragmented and illogical, my perceptions distorted and unreliable, making it difficult to distinguish between what is real and what is not. I struggle to follow conversations, to organize my thoughts, to make sense of the world around me. This terrifying sense of cognitive decline is a constant source of fear and despair. I yearn for clarity and coherence, but the more I try to grasp them, the further they seem to recede, leaving me feeling lost and adrift in the currents of my own disordered mind.",
]

# Combine and shuffle the custom entries and define true labels
custom_entries_combined = custom_entries_label_0_new + custom_entries_label_1_new
custom_labels_combined = [0] * len(custom_entries_label_0_new) + [1] * len(custom_entries_label_1_new)

# Shuffle the combined data while maintaining the correspondence between entries and labels
combined_data = list(zip(custom_entries_combined, custom_labels_combined))
random.shuffle(combined_data)

# Unzip the shuffled data
custom_entries_shuffled, custom_labels_shuffled = zip(*combined_data)

# Convert back to lists
custom_entries_shuffled = list(custom_entries_shuffled)
custom_labels_shuffled = list(custom_labels_shuffled)

print(f"Total number of custom entries: {len(custom_entries_shuffled)}")
print(f"Total number of custom labels: {len(custom_labels_shuffled)}")

# Display the shuffled list of entries (first 10 for brevity, or you can adjust)
print("\nShuffled Custom Entries (first 10):")
for i, entry in enumerate(custom_entries_shuffled[:10]):
    print(f"Entry {i+1} (Label: {custom_labels_shuffled[i]}): {entry[:200]}...") # Displaying first 200 characters

"""## Prepare custom data for evaluation

### Subtask:
Create a pandas DataFrame from the custom journal entries and labels, tokenize the data, and create a `Dataset` object for evaluation.

**Reasoning**:
Create a DataFrame from the custom entries and labels, tokenize the 'CHUNK' column using the existing tokenizer, and create a MentalHealthDataset object for evaluation.
"""

# Create a DataFrame from the custom entries and labels
custom_df = pd.DataFrame({'POST': custom_entries_shuffled, 'LABEL': custom_labels_shuffled})

# Tokenize the custom data
custom_encodings = tokenizer(
    custom_df['POST'].tolist(),
    truncation=True,
    padding=True,
    max_length=max_input_length,
    return_tensors='pt'
)

# Create Dataset object for custom data
custom_dataset = MentalHealthDataset(custom_encodings, custom_df['LABEL'].tolist())

print("Custom dataset size:", len(custom_dataset))

"""## Evaluate the model on custom data

### Subtask:
Make predictions on the `custom_dataset` using the loaded model and calculate evaluation metrics and a confusion matrix.

**Reasoning**:
Use the `Trainer` object to predict on the custom dataset, then calculate evaluation metrics and generate a confusion matrix using the predicted labels and the true labels.
"""

from sklearn.metrics import accuracy_score, precision_recall_fscore_support, confusion_matrix
import numpy as np

# Make predictions on the custom set
predictions_custom = trainer.predict(custom_dataset)

# Get predicted labels
predicted_labels_custom = np.argmax(predictions_custom.predictions, axis=1)

# Get true labels
true_labels_custom = custom_dataset.labels

# Calculate evaluation metrics
accuracy_custom = accuracy_score(true_labels_custom, predicted_labels_custom)
precision_custom, recall_custom, f1_custom, _ = precision_recall_fscore_support(true_labels_custom, predicted_labels_custom, average='binary') # Use 'binary' for binary classification

print(f"Custom Data Accuracy: {accuracy_custom:.4f}")
print(f"Custom Data Precision: {precision_custom:.4f}")
print(f"Custom Data Recall: {recall_custom:.4f}")
print(f"Custom Data F1 Score: {f1_custom:.4f}")

# Generate confusion matrix
conf_matrix_custom = confusion_matrix(true_labels_custom, predicted_labels_custom)
print("\nCustom Data Confusion Matrix:")
print(conf_matrix_custom)

"""# Task
Perform SHAP and LIME explainability analysis on the model using 2-3 samples from each label from either the `combined_test_df` or `custom_df`.

## Install libraries

### Subtask:
Install the `shap` and `lime` libraries.

**Reasoning**:
Install the necessary libraries for SHAP and LIME analysis.
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install shap lime

"""## Select samples

### Subtask:
Choose 2-3 samples from each label (0 and 1) from either the `combined_test_df` or `custom_df` for explainability analysis.

**Reasoning**:
Select 2-3 samples for each label from the custom_df for explainability analysis.
"""

# Select 2-3 samples from each label from custom_df
sample_label_0 = custom_df[custom_df['LABEL'] == 0].sample(min(3, len(custom_df[custom_df['LABEL'] == 0])), random_state=42)
sample_label_1 = custom_df[custom_df['LABEL'] == 1].sample(min(3, len(custom_df[custom_df['LABEL'] == 1])), random_state=42)

# Combine the samples
explainability_samples_df = pd.concat([sample_label_0, sample_label_1])

print("Samples selected for explainability analysis:")
display(explainability_samples_df)

"""## Prepare for shap

### Subtask:
Create a callable function that takes raw text input and returns the model's prediction probabilities.

**Reasoning**:
Define a callable function that takes raw text input and returns the model's prediction probabilities using the loaded tokenizer and model.
"""

import torch
from transformers import AutoModelForSequenceClassification

# Define the path to the saved model in Google Drive
output_dir = "/content/drive/MyDrive/models/DATASET 3.0/MODELS MADE USING DATASET 3.0"

# Load the model
# Ensure the model is loaded as a sequence classification model from the correct path
model = AutoModelForSequenceClassification.from_pretrained(output_dir)

# Determine the device
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model.to(device)
print(f"Model moved to: {device}")


def predict_proba_shap(text_input):
    """
    Predicts the probability distribution for a list of text inputs.

    Args:
        text_input: A string or a list of strings.

    Returns:
        A NumPy array of prediction probabilities.
    """
    # Ensure text_input is a list of strings, handling potential numpy arrays of strings
    if isinstance(text_input, str):
        text_list = [text_input]
    elif isinstance(text_input, list):
        # Check if the list contains strings or lists of strings (pre-tokenized)
        if all(isinstance(i, str) for i in text_input):
            text_list = text_input
        elif all(isinstance(i, list) and all(isinstance(j, str) for j in j) for j in text_input):
             # Handle case where SHAP might pass pre-tokenized lists of strings
             # This might require joining the tokens back into strings
             text_list = [" ".join(map(str, item)) for item in text_input]
        else:
            # Attempt to handle numpy arrays of strings which SHAP might pass
            try:
                text_list = [str(item) for item in text_input]
            except:
                 raise ValueError("Input must be a string or a list of strings.")

    elif isinstance(text_input, np.ndarray):
         # Handle numpy arrays of strings
         text_list = [str(item) for item in text_input.flatten()]

    else:
        raise ValueError("Input must be a string or a list of strings or a numpy array of strings.")


    # Tokenize the input text
    encodings = tokenizer(
        text_list,
        truncation=True,
        padding=True,
        max_length=max_input_length,
        return_tensors='pt'
    )

    # Move inputs to the same device as the model
    input_ids = encodings['input_ids'].to(device)
    attention_mask = encodings['attention_mask'].to(device)

    # Get model predictions
    model.eval() # Set the model to evaluation mode
    with torch.no_grad():
        outputs = model(input_ids, attention_mask=attention_mask)

    # Apply softmax to get probabilities
    probabilities = torch.softmax(outputs.logits, dim=1)

    return probabilities.cpu().numpy()

# Test the function with a sample
sample_texts = explainability_samples_df['POST'].tolist()
predictions = predict_proba_shap(sample_texts)
print("Prediction probabilities for sample texts:")
print(predictions)

"""## Apply SHAP

### Subtask:
Use the `shap` library to compute SHAP values for the selected samples.

**Reasoning**:
Initialize a SHAP `Explainer` using the `predict_proba_shap` function and the tokenizer, then calculate the SHAP values for the selected samples.
"""

import shap
import torch

# Create a SHAP explainer object
# Use a custom prediction function that handles tokenization
# explainer = shap.Explainer(predict_proba_shap, tokenizer) # This was causing issues

# Create a background dataset for SHAP - using a small sample of the training data
# The background data should be in the format expected by the tokenizer
background_data = combined_train_df['CHUNK'].sample(min(100, len(combined_train_df)), random_state=42).tolist()

# Create a SHAP explainer for text data
explainer = shap.Explainer(predict_proba_shap, tokenizer, background=background_data)


# Calculate SHAP values for the selected samples
# This might take some time depending on the number of samples and the model complexity
shap_values = explainer(explainability_samples_df['POST'].tolist())

print("SHAP values calculated.")

"""## Visualize SHAP results

### Subtask:
Visualize the SHAP values for the selected samples using SHAP force plots.

**Reasoning**:
Generate SHAP force plots to visualize the contribution of each word to the model's output for the selected samples. This helps in understanding how individual words influence the prediction for each class.
"""

# Visualize the SHAP values for the first sample (you can loop through the samples)
shap.initjs() # Initialize JavaScript for interactive plots

# Assuming the first column in the SHAP values corresponds to label 0 and the second to label 1
# You can adjust the output index based on your model's output
print("SHAP Force Plot for Sample 1 (Label 0):")
shap.plots.force(shap_values[0, :, 0])

print("\nSHAP Force Plot for Sample 1 (Label 1):")
shap.plots.force(shap_values[0, :, 1])

# You can repeat this for other samples as needed
# For example, for the second sample:
# print("\nSHAP Force Plot for Sample 2 (Label 0):")
# shap.plots.force(shap_values[1, :, 0])
# print("\nSHAP Force Plot for Sample 2 (Label 1):")
# shap.plots.force(shap_values[1, :, 1])

"""## Prepare for LIME

### Subtask:
Create a callable function that takes raw text input and returns the model's prediction probabilities, formatted for LIME.

**Reasoning**:
Define a callable function that takes raw text input and returns the model's prediction probabilities in the format expected by LIME (a NumPy array where each row corresponds to a sample and each column corresponds to a class probability).
"""

import numpy as np
import torch

def predict_proba_lime(text_list):
    """
    Predicts the probability distribution for a list of text inputs, formatted for LIME.

    Args:
        text_list: A list of strings.

    Returns:
        A NumPy array of prediction probabilities with shape (num_samples, num_classes).
    """
    # Tokenize the input text
    encodings = tokenizer(
        text_list,
        truncation=True,
        padding=True,
        max_length=max_input_length,
        return_tensors='pt'
    )

    # Move inputs to the same device as the model
    device = model.device
    input_ids = encodings['input_ids'].to(device)
    attention_mask = encodings['attention_mask'].to(device)

    # Get model predictions
    with torch.no_grad():
        outputs = model(input_ids, attention_mask=attention_mask)

    # Apply softmax to get probabilities
    probabilities = torch.softmax(outputs.logits, dim=1)

    return probabilities.cpu().numpy()

# Test the function with a sample
sample_texts_lime = explainability_samples_df['POST'].tolist()
predictions_lime = predict_proba_lime(sample_texts_lime)
print("Prediction probabilities for sample texts (LIME format):")
print(predictions_lime)

"""## Apply LIME

### Subtask:
Use the `lime` library to compute LIME explanations for the selected samples.

**Reasoning**:
Initialize a LIME `LimeTextExplainer`, generate explanations for each sample using the `predict_proba_lime` function, and store the explanations.
"""

from lime.lime_text import LimeTextExplainer
import torch

# Create a LIME explainer object
# Specify the class names (labels)
class_names = ['0', '1']
explainer_lime = LimeTextExplainer(class_names=class_names)

# Generate explanations for each sample
lime_explanations = []

# Select a smaller subset of samples for LIME explanation to reduce memory usage
# Explaining 1 sample per label as requested
samples_for_lime = explainability_samples_df.groupby('LABEL').head(1).reset_index() # Reset index here

# Define the number of samples for LIME explanation
num_lime_samples = 50 # Reduced number of samples for LIME

# Merge samples_for_lime with custom_df to get the POST_ID
samples_for_lime_with_id = samples_for_lime.merge(custom_df[['POST', 'LABEL']].reset_index().rename(columns={'index': 'POST_ID'}), on=['POST', 'LABEL'], how='left')


for index, row in samples_for_lime_with_id.iterrows():
    text = row['POST']
    label = row['LABEL']
    # Explain the instance
    # num_features is the number of words to show in the explanation
    explanation = explainer_lime.explain_instance(
        text,
        predict_proba_lime,
        num_features=10, # You can adjust the number of features
        num_samples=num_lime_samples, # Use the reduced number of samples
        labels=[0, 1] # Explain for both classes
    )
    lime_explanations.append({'POST_ID': row['POST_ID'], 'LABEL': label, 'EXPLANATION': explanation})

print("LIME explanations generated.")

"""## Visualize LIME results

### Subtask:
Visualize the LIME explanations for the selected samples.

**Reasoning**:
Iterate through the generated LIME explanations and display the explanations for each sample using the `as_html()` method to visualize the word contributions for each class.
"""

from IPython.display import display, HTML

# Visualize the LIME explanations
for explanation_data in lime_explanations:
    post_id = explanation_data['POST_ID']
    label = explanation_data['LABEL']
    explanation = explanation_data['EXPLANATION']

    print(f"LIME Explanation for POST_ID: {post_id} (True Label: {label})")

    # Display the explanation for each class
    for label_idx, class_name in enumerate(explanation.class_names):
        print(f"Explanation for class {class_name}:")
        # Use as_html() to display the explanation in a readable format
        # The label argument should be the index of the class to explain
        display(HTML(explanation.as_html([label_idx]))) # Pass label_idx as a list

    print("-" * 50) # Separator for clarity

# Print LIME explanations as a list to inspect the structure
for explanation_data in lime_explanations:
    post_id = explanation_data['POST_ID']
    label = explanation_data['LABEL']
    explanation = explanation_data['EXPLANATION']

    print(f"LIME Explanation for POST_ID: {post_id} (True Label: {label})")

    # Print the explanation for each class as a list of (word, weight) tuples
    for label_idx, class_name in enumerate(explanation.class_names):
        print(f"Explanation for class {class_name}:")
        print(explanation.as_list(label_idx))

    print("-" * 50) # Separator for clarity